close all;

% G7E : Simulation - L'accéléromètre contre l'atrophie musculaire
% Se référer à la page Web : et au rapport G7E_Accelerometre_Rapport.pdf
% détaillant la méthode suivie.

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: G7E_Accelerometre_Data.csv
%
% Auto-generated by MATLAB on 10-Jan-2023 19:08:57

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 5);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ";";

% Specify column names and types
opts.VariableNames = ["time", "Var2", "Var3", "azms2", "Var5"];
opts.SelectedVariableNames = ["time", "azms2"];
opts.VariableTypes = ["double", "string", "string", "double", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var2", "Var3", "Var5"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var2", "Var3", "Var5"], "EmptyFieldRule", "auto");
opts = setvaropts(opts, ["time", "azms2"], "DecimalSeparator", ",");
opts = setvaropts(opts, ["time", "azms2"], "ThousandsSeparator", ".");

% Import the data
data = readtable("G7E_Accelerometre_Data.csv", opts);

%% Convert to output type
data = table2array(data);

%% Clear temporary variables
clear opts

time = data(:,1);
accel = data(:,2);

% Détermination des minimas et maximas locaux
TF = islocalmin(accel,MinSeparation=2,SamplePoints=time,MinProminence=4);
[c,locs] = findpeaks(accel,time,MinPeakHeight=1.5, MinPeakDistance=2);

% Début de la phase concentrique
point_part = zeros(length(c)-2,1);
for k=1:length(point_part)
    point_part(k) = find(accel == c(k+1)) - 60;
end

figure(1);
plot(time,accel, LineWidth=0.6, Color='r');
hold on;
plot(time,accel,time(TF), accel(TF), 'kv', MarkerSize=10, LineWidth=1.4);
hold on;
for u=1:length(point_part)
    plot(time(point_part(u)), accel(point_part(u)),'bo', MarkerSize=10,LineWidth=1.4)
end
grid on;
xlabel("Temps (s)");
ylabel("accélération (m/s^2)");
title("Profil de l'accélération selon l'axe z");

min_index = find(TF == 1);
concentrique = zeros(length(min_index)-1,1);

% Calcul de la durée de chaque phase concentrique
for i = 1:length(concentrique)
    concentrique(i) = time(min_index(i)) - time(point_part(i));
    disp("Durée phase concentrique n° " + i + " : " + concentrique(i) + " s");
end

disp( " ----------------------------- ");


excentrique = zeros(length(min_index) - 2,1);

% Calcul de la durée de chaque phase excentrique
for j = 1:length(excentrique)
    excentrique(j) = time(point_part(j+1)) - time(min_index(j));
    disp("Durée phase excentrique n° " + j + " : " + excentrique(j) + " s");
end

disp( " ----------------------------- ");

disp("Vous avez réalisé " + length(concentrique) + " répétitions durant cet exercice de musculation");
sous_tension = sum(concentrique) + sum(excentrique);
disp("Le temps total passé sous tension est de : " + sous_tension + " s");
